# workflow to build and push docker image to AWS ECR (Elastic Container Registory)

name: Deploy to ECR

# workflow execution
on:
#   # Triggers the workflow on push, when any cahnges are done in repo on master branch
  # push:
  #   branches: [ master ]
  
  # Allow Manually trigger the workflow from GitHuB Action tab
  workflow_dispatch:
  
#Jobs to build, configure and push 
jobs:

  Deployment:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Configure Docker Client
      run: |-
         gcloud auth configure-docker --quiet
         gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    # - name: Get commit hash
    #   id: get-commit-hash
    #   run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

    - name: docker version command
      run: docker --version

    - name: executing fw commands 
      run: | 
        pwd
        cd infra/terraform 
        pwd
        ls 

    - name: Initialize Terraform
      run: |
        cd infra/terraform 
        terraform init
        terraform plan

    - name: terraform apply
      if: steps.plan.outputs.has_changes == 'true'
      run: terraform apply -auto-approve

    - name: Get ECR repository URL
      id: ecr
      run: echo "::set-output name=url::$(terraform output -raw ecr_repository_url)"

    # - name: Terraform Format Check
    #   run: terraform fmt -check

    # - name: Terraform Plan
    #   run: terraform plan

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main'
    #   run: terraform apply -auto-approve

    # - name: Get ECR repository URL
    #   id: ecr
    #   run: echo "::set-output name=url::$(terraform output -raw ecr_repository_url)"

      
    - name: build, tag and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.ecr.outputs.url }}
        ECR_REPOSITORY: my-flask-app
        IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}
#        IMAGE_TAG: flask_app
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Deploy to EKS
    #   uses: aws-actions/eks-update-kubeconfig@v1
    #   with:
    #     cluster-name: my-cluster
    #     region: us-west-2

    #   - name: Verify Deployment
    #     run: |
    #       kubectl rollout status deployment/flask-app




          
